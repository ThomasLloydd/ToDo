{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/ToDoCount.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","className","onChange","e","console","log","target","value","id","placeholder","type","onClick","preventDefault","text","completed","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","ToDoCount","pluralTask","status","length","todoLength","filteredTasks","task","App","useState","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2233a5b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\r\n    \r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n        ]);\r\n        setInputText('');\r\n    };\r\n\r\n    const statusHandler = (e) => {\r\n      setStatus(e.target.value);\r\n    }\r\n    \r\n   \r\n\r\n\r\n    return (\r\n        <form>\r\n          <div className=\"inputText\">\r\n        <input onChange={inputTextHandler} id=\"inputVal\" value={inputText} placeholder=\"I need to...\"type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        </div>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncomplete</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el)=> el.id !== todo.id))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler}className=\"trash-btn\">\r\n                <i  className=\"fas fa-trash\"></i>\r\n                </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Todo from './Todo.js'\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {filteredTodos.map(todo => (\r\n            <Todo setTodos={setTodos}todos={todos} todo={todo} key={todo.id} text={todo.text}/>\r\n          ))}\r\n        </ul>\r\n        \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nconst ToDoCount = ({ filteredTodos, status} ) => {\r\n\r\n\r\nlet pluralTask;\r\n\r\nif (filteredTodos.length === 1){\r\n    pluralTask = \"task\"\r\n} else {\r\n    pluralTask = \"tasks\"\r\n}\r\n\r\nlet filteredTasks = filteredTodos.filter(task => task.completed === false);\r\n\r\nlet todoLength;\r\n\r\nif (filteredTodos.length === 0){\r\n    todoLength = \"none\";\r\n} else {\r\n    todoLength = filteredTodos.length;\r\n}\r\n\r\n\r\nif (status === 'completed'){\r\n    return (\r\n    <h2>You have completed {todoLength} of your tasks!</h2>\r\n    )\r\n} else {\r\nreturn (\r\n<h2>You have {filteredTasks.length} {pluralTask} to complete</h2>\r\n)\r\n}\r\n\r\n}\r\n\r\nexport default ToDoCount;","\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport ToDoCount from './components/ToDoCount';\n\n\n\n\n\nfunction App() {\n  //State\n \n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n \n  useEffect(()=> {\n    getLocalTodos();\n  }, []);\n\n  useEffect(()=> {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  \n\n  //Functions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n      break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n      break;\n      default:\n        setFilteredTodos(todos);\n      } \n  }\n\n  //Save\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    };\n\n    const getLocalTodos = () => {\n      if(localStorage.getItem('todos') === null){\n        localStorage.setItem('todos', JSON.stringify([]));\n      } else {\n        let todoLocal = JSON.parse(localStorage.getItem('todos'));\n        setTodos(todoLocal);\n      };\n    };\n  \n   \n\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n      <div className=\"content-container\">\n        <div class=\"title-container\">\n     <h1>To do</h1>\n     <ToDoCount todos={todos} filteredTodos={filteredTodos} status={status}/>\n     <h2></h2>\n     </div>\n     \n     <Form setInputText={setInputText} inputText={inputText} todos={todos} setTodos={setTodos} setStatus={setStatus} />\n     <TodoList setTodos={setTodos}todos={todos}filteredTodos={filteredTodos} status={status}/>\n     \n     </div>\n     </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}